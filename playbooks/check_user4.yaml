---
- name: Check Local Users
  hosts: "{{ hosts.split(';') }}"  # Split SERVER_NAME into a list
  gather_facts: false

  vars:
    # Splitting TARGET_USERNAME into a list of usernames
    target_usernames_list: "{{ lookup('env', 'TARGET_USERNAME').split(';') }}"
    user_existence_results: []  # Initialize an empty list to store results

  tasks:
    # Loop through each username in the list
    - name: Check existence of multiple users
      shell: "id {{ item }}"
      register: user_info
      ignore_errors: true
      loop: "{{ target_usernames_list }}"
      loop_control:
        loop_var: item

    # Debug message for each user
    - name: Display user existence
      debug:
        msg: "User '{{ item.item }}' exists on {{ inventory_hostname }}"
      loop: "{{ user_info.results }}"
      loop_control:
        loop_var: item
      when: item.rc == 0
      register: user_exists_result

    # Debug message for non-existing users
    - name: Display user does not exist
      debug:
        msg: "User '{{ item.item }}' does not exist on {{ inventory_hostname }}"
      loop: "{{ user_info.results }}"
      loop_control:
        loop_var: item
      when: item.rc != 0
      register: user_not_exists_result

    # Aggregate results into a list
    - set_fact:
        user_existence_results: "{{ user_existence_results + [{'host': inventory_hostname, 'user_exists': user_exists_result.changed | default(false), 'user_not_exists': user_not_exists_result.changed | default(false)}] }}"

    # Final summary message
    - name: Final message
      debug:
        msg: |
          User existence check completed across all hosts:
          {% for result in user_existence_results %}
          - Host: {{ result.host }}
            {% if result.user_exists %}
            - User exists
            {% endif %}
            {% if result.user_not_exists %}
            - User does not exist
            {% endif %}
          {% endfor %}
