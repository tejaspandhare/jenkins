---
- name: Gather installed packages from working host
  hosts: "{{ working_host }}"
  gather_facts: false
  tasks:
    - name: Get installed packages
      shell: dpkg --get-selections | grep -w install
      register: package_list

    - name: Save package list to file
      copy:
        content: "{{ package_list.stdout }}"
        dest: "/tmp/packages_{{ inventory_hostname }}.txt"

- name: Gather installed packages from nonworking host
  hosts: "{{ nonworking_host }}"
  gather_facts: false
  tasks:
    - name: Get installed packages
      shell: dpkg --get-selections | grep -w install
      register: package_list

    - name: Save package list to file
      copy:
        content: "{{ package_list.stdout }}"
        dest: "/tmp/packages_{{ inventory_hostname }}.txt"

- name: Fetch package lists to control node
  hosts: "{{ working_host }},{{ nonworking_host }}"
  gather_facts: false
  tasks:
    - name: Fetch package list file to controller
      fetch:
        src: "/tmp/packages_{{ inventory_hostname }}.txt"
        dest: "./fetched/"
        flat: true

- name: Compare package lists and print missing packages only
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    working_file: "fetched/packages_{{ working_host }}.txt"
    nonworking_file: "fetched/packages_{{ nonworking_host }}.txt"
    compare_script_url: "https://raw.githubusercontent.com/tejaspandhare/python/main/scripts/compare_packages1.py"
  tasks:
    - name: Download comparison script
      get_url:
        url: "{{ compare_script_url }}"
        dest: "{{ playbook_dir }}/compare_packages.py"
        mode: '0755'

    - name: Run comparison script and capture only missing packages
      shell: |
        python3 compare_packages.py {{ working_file }} {{ nonworking_file }} --plain | grep -v '^Packages' | grep -v '^$'
      args:
        chdir: "{{ playbook_dir }}"
      register: comparison_output
      failed_when: false

    - name: Print only missing package names in Jenkins console
      debug:
        #msg: "{{ comparison_output.stdout_lines }}"
        msg: "{{ comparison_output.stdout }}"
        #shell: echo "{{ comparison_output.stdout }}"
