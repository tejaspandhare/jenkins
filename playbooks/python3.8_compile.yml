---
- name: Compile Python 3.8.10 and install pip3.8 from source
  hosts: "{{ hosts.split(';') }}"
  become: true
  gather_facts: true

  vars:
    python_version: "3.8.10"
    python_src_dir: "/usr/src"
    python_tarball: "Python-{{ python_version }}.tgz"
    python_url: "https://www.python.org/ftp/python/{{ python_version }}/{{ python_tarball }}"
    python_prefix: "/usr/local"
    python_bin_path: "{{ python_prefix }}/bin/python3.8"
    pip_bin_path: "{{ python_prefix }}/bin/pip3.8"

  tasks:
    - name: Install dependencies on Debian/Ubuntu
      apt:
        name:
          - build-essential
          - zlib1g-dev
          - libssl-dev
          - wget
          - curl
        state: present
      when: ansible_os_family == "Debian"

    - name: Install dependencies on RHEL/CentOS
      yum:
        name:
          - gcc
          - openssl-devel
          - bzip2-devel
          - libffi-devel
          - zlib-devel
          - make
          - readline-devel
          - sqlite-devel
          - xz-devel
          - tk-devel
          - wget
          - curl
        state: present
      when: ansible_os_family == "RedHat"

    - name: Create source directory
      file:
        path: "{{ python_src_dir }}"
        state: directory
        mode: '0755'

    - name: Download Python 3.8.10 source
      get_url:
        url: "{{ python_url }}"
        dest: "{{ python_src_dir }}/{{ python_tarball }}"
        mode: '0644'

    - name: Extract Python tarball
      unarchive:
        src: "{{ python_src_dir }}/{{ python_tarball }}"
        dest: "{{ python_src_dir }}"
        remote_src: yes

    - name: Compile and install Python 3.8.10
      shell: |
        cd {{ python_src_dir }}/Python-{{ python_version }}
        ./configure --prefix=/usr/local
        make
        make altinstall
      args:
        creates: "{{ python_bin_path }}"

    - name: Install pip for Python 3.8
      shell: |
        curl -sS https://bootstrap.pypa.io/pip/3.8/get-pip.py -o /tmp/get-pip.py
        {{ python_bin_path }} /tmp/get-pip.py
      args:
        creates: "{{ pip_bin_path }}"

    - name: Create symlink /usr/bin/python3.8
      file:
        src: "{{ python_bin_path }}"
        dest: /usr/bin/python3.8
        state: link
        force: yes

    - name: Create symlink /usr/bin/pip3.8
      file:
        src: "{{ pip_bin_path }}"
        dest: /usr/bin/pip3.8
        state: link
        force: yes

    - name: Check installed Python version
      command: /usr/bin/python3.8 --version
      register: python_version_output

    - name: Check installed pip3.8 version
      command: /usr/bin/pip3.8 --version
      command: /usr/bin/pip3.8 list
      register: pip_version_output

    - name: Check installed pip3.8 modules
      command: /usr/bin/pip3.8 list
      register: pip_modules_output

    - name: Show Python version
      debug:
        msg: "Python 3.8 installed: {{ python_version_output.stdout }}"

    - name: Show pip3.8 version
      debug:
        msg: "pip3.8 installed: {{ pip_version_output.stdout }}"
