---
- name: Perform Maintenance Tasks
  hosts: "{{ hosts.split(';') }}"  # Split SERVER_NAME into a list
  gather_facts: true  # Ensure facts are gathered to check OS version

  tasks:
    - name: Remove disabled snaps
      ansible.builtin.shell:
        cmd: "snap list --all"
      register: snap_list_output
      changed_when: false

    - name: Process snap list output and remove disabled snaps
      ansible.builtin.shell:
        cmd: "snap remove {{ item.0 }} --revision={{ item.1 }}"
      with_items: "{{ snap_list_output.stdout_lines }}"
      when: "'disabled' in item"
      changed_when: false

    - name: Vacuum journalctl logs to limit size to 20M
      ansible.builtin.shell:
        cmd: "journalctl --vacuum-size=20M"
      changed_when: false

    - name: Perform apt update to check for kernel updates
      ansible.builtin.shell:
        cmd: "apt update"
      changed_when: false

    - name: Check kernel version before patching
      ansible.builtin.command:
        cmd: "uname -r"
      register: kernel_version_before
      changed_when: false

    - name: Update OS patches (apt dist-upgrade)
      ansible.builtin.shell:
        cmd: "apt dist-upgrade -y"
      changed_when: "stdout_lines|select('search', 'The following packages will be upgraded: linux-image-')|list"

    - name: Check kernel version after patching
      ansible.builtin.command:
        cmd: "uname -r"
      register: kernel_version_after
      changed_when: false

    - name: Reboot if kernel version has changed
      ansible.builtin.reboot:
      when: kernel_version_before.stdout != kernel_version_after.stdout
      async: 0
      poll: 0
      ignore_errors: true
      changed_when: true

    - name: Display OS version changes
      ansible.builtin.debug:
        msg: |
          OS version before patching:
          {{ kernel_version_before.stdout }}

          OS version after patching:
          {{ kernel_version_after.stdout }}
